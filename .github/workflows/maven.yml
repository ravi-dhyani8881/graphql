# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  repository_dispatch:
    types: [trigger-graphql-code-compile-workflow]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Log event payload to a file
      run: echo '${{ toJson(github.event) }}' > event_payload.json

    - name: Extract projectName and write to file.json
      run: |
        projectName=$(jq -r '.client_payload.data' event_payload.json)
        echo "Extracted projectName: $projectName"
        echo "$projectName" > file.json

    - name: Verify the project name
      run: echo "Project Name:" ${{ env.PROJECT_PAYLOAD }}

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn clean install
      working-directory: ${{ env.PROJECT_PAYLOAD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ravi88881/my-graphql-code-app-image:latest .
        docker push ravi88881/my-graphql-code-image:latest
